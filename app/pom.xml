<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

	<groupId>tokyomap-oauth.app</groupId>
  <artifactId>ROOT</artifactId>
  <version>1.0.0</version>
  <packaging>war</packaging>
  <name>tokyomap-oauth</name>
  <url>https://www.tokyomap.ouath</url>
  <description>OAuth for https://www.tokyomap.live</description>

  <repositories>
    <repository>
      <id>maven.central</id>
      <name>Maven Central Repository</name>
      <url>https://repo1.maven.apache.org/maven2</url>
    </repository>
    <repository>
      <id>mvn.repository</id>
      <name>Maven Repository</name>
      <url>https://mvnrepository.com/artifact</url>
    </repository>
  </repositories>

  <properties>
    <jdk.version>1.8</jdk.version><!-- use Java 8 -->
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.version>3.8.1</maven.version>
    <servlet-api.version>3.0.1</servlet-api.version>
    <spring-framework.version>5.3.9</spring-framework.version>
    <spring-framework-data.version>3.5.4</spring-framework-data.version>
    <spring-framework-jpa.version>2.5.4</spring-framework-jpa.version>
    <spring-framework-security.version>5.5.2</spring-framework-security.version>
    <spring-data-redis.version>2.6.4</spring-data-redis.version>
    <aspectjweaver.version>1.9.8.M1</aspectjweaver.version>
    <hibernate-core.version>5.5.6.Final</hibernate-core.version>
    <apache-commons-dbcp.version>2.9.0</apache-commons-dbcp.version>
    <logback-classic.version>1.2.5</logback-classic.version>
    <javax-persistence.version>2.2</javax-persistence.version>
    <validation-api.version>2.0.1.Final</validation-api.version>
    <jackson-databind.version>2.13.2.1</jackson-databind.version>
    <jackson-datatype.version>2.13.2</jackson-datatype.version>
    <thymeleaf.version>3.0.12.RELEASE</thymeleaf.version>
    <thymeleaf-spring5.version>3.0.12.RELEASE</thymeleaf-spring5.version>
    <thymeleaf-extras.version>3.0.4.RELEASE</thymeleaf-extras.version>
    <postgresql.version>42.2.23</postgresql.version>
    <jedis.version>3.6.0</jedis.version>
    <nimbus-jose-jwt.version>9.22</nimbus-jose-jwt.version>
    <junit-jupiter.version>5.8.2</junit-jupiter.version>
    <junit.version>4.13.2</junit.version>
    <assertj.version>3.22.0</assertj.version>
    <mockito.version>1.10.19</mockito.version>
    <commons-lang3.version>3.12.0</commons-lang3.version>
    <maven-surefire-plugin.version>2.22.0</maven-surefire-plugin.version>
    <commons-codec.version>1.15</commons-codec.version>
  </properties>

  <dependencies>
    <!-- servlet-api -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>${servlet-api.version}</version>
      <scope>provided</scope>
    </dependency>
    <!-- Spring MVC -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring-framework.version}</version>
      <!-- no scope, the lib is added on compile by default -->
    </dependency>
    <!-- Spring Security -->
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
      <version>${spring-framework-security.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
      <version>${spring-framework-security.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
      <version>${spring-framework-security.version}</version>
    </dependency>
    <!-- Spring Data REST WebMVC -->
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-rest-webmvc</artifactId>
      <version>${spring-framework-data.version}</version>
    </dependency>
    <!-- Spring TestContext -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring-framework.version}</version>
      <scope>test</scope><!-- the lib is added to the classpath on test -->
    </dependency>
    <!-- Spring JDBC -->
<!--    <dependency>-->
<!--      <groupId>org.springframework.data</groupId>-->
<!--      <artifactId>spring-jdbc</artifactId>-->
<!--      <version>${spring-framework-data.version}</version>-->
<!--      <scope>runtime</scope>--><!-- `runtime` adds the lib to classpath when it's needed. Libs needed on execution such as JDBC Driver has this scope. -->
<!--    </dependency>-->
    <!-- Spring Data JPA -->
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-jpa</artifactId>
      <version>${spring-framework-jpa.version}</version>
    </dependency>
    <!-- Spring Data Redis-->
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-redis</artifactId>
      <version>${spring-data-redis.version}</version>
    </dependency>
    <!-- Hibernate -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>${hibernate-core.version}</version>
      <scope>runtime</scope>
    </dependency>
    <!-- Apache Commons DBCP -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-dbcp2</artifactId>
      <version>${apache-commons-dbcp.version}</version>
    </dependency>
    <!--    <dependency>-->
<!--      <groupId>org.hibernate.validator</groupId>-->
<!--      <artifactId>hibernate-validator</artifactId>-->
<!--      <version>${hibernate-validator.version}</version>-->
<!--    </dependency>-->
    <!-- Spring Transactions -->
<!--    <dependency>-->
<!--      <groupId>org.springframework</groupId>-->
<!--      <artifactId>spring-tx</artifactId>-->
<!--      <version>${spring-framework.version}</version>-->
<!--    </dependency>-->
    <!-- Spring AOP -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <version>${spring-framework.version}</version>
    </dependency>
    <!-- AspectJ -->
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>${aspectjweaver.version}</version>
    </dependency>
    <!-- Java Persistence -->
    <dependency>
      <groupId>javax.persistence</groupId>
      <artifactId>javax.persistence-api</artifactId>
      <version>${javax-persistence.version}</version>
    </dependency>
    <!-- Bean Validation -->
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>${validation-api.version}</version>
    </dependency>
    <!-- Jackson Databind -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson-databind.version}</version>
    </dependency>
    <!-- Jackson Datatype -->
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>${jackson-datatype.version}</version>
    </dependency>
    <!-- Thymeleaf with Spring -->
    <dependency>
      <groupId>org.thymeleaf</groupId>
      <artifactId>thymeleaf</artifactId>
      <version>${thymeleaf.version}</version>
    </dependency>
    <dependency>
      <groupId>org.thymeleaf</groupId>
      <artifactId>thymeleaf-spring5</artifactId>
      <version>${thymeleaf-spring5.version}</version>
    </dependency>
    <!-- Thymeleaf Extras Java8time -->
    <dependency>
      <groupId>org.thymeleaf.extras</groupId>
      <artifactId>thymeleaf-extras-java8time</artifactId>
      <version>${thymeleaf-extras.version}</version>
    </dependency>
    <dependency>
      <groupId>org.thymeleaf.extras</groupId>
      <artifactId>thymeleaf-extras-springsecurity5</artifactId>
      <version>${thymeleaf-extras.version}</version>
    </dependency>
    <!-- Postgres JDBC driver-->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgresql.version}</version>
    </dependency>
    <!-- jedis -->
    <dependency>
      <groupId>redis.clients</groupId>
      <artifactId>jedis</artifactId>
      <version>${jedis.version}</version>
      <type>jar</type>
    </dependency>
    <!-- Nimbus JOSE+JWT -->
    <dependency>
      <groupId>com.nimbusds</groupId>
      <artifactId>nimbus-jose-jwt</artifactId>
      <version>${nimbus-jose-jwt.version}</version>
    </dependency>
    <!-- Apache Commons Codec -->
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${commons-codec.version}</version>
    </dependency>
    <!-- jUnit-->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- AssertJ -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- Mockito -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>7.5</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons-lang3.version}</version>
    </dependency>
    <!-- commons-codec.version -->
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${commons-codec.version}</version>
    </dependency>
  </dependencies>

  <build>
    <finalName>ROOT</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.version}</version>
        <configuration>
          <source>${jdk.version}</source>
          <target>${jdk.version}</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.3.1</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib/</classpathPrefix>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <!-- execute the unit tests during the test phase of the build lifecycle -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>develop</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <resources>
          <resource><directory>src/profiles/develop/resources</directory></resource>
          <resource><directory>src/main/resources</directory></resource>
        </resources>
      </build>
    </profile>
    <profile>
      <id>production</id>
      <build>
        <resources>
          <resource><directory>src/profiles/production/resources</directory></resource>
          <resource><directory>src/main/resources</directory></resource>
        </resources>
      </build>
    </profile>
  </profiles>

</project>
